import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import engine.Engine;
import engine.PrintHelper;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import maps.DocumentSize;
import tfidf.*;

/**
 * Created by diann on 2/27/2016.
 */
public class SearchInterface {
    private JTextField searchQueryText;
    private JButton searchQueryEnter;
    private JList searchQueryResult;
    private JPanel Panel1;
    private JFrame frame;
    public String searchQuery;
    private SearchActionListen getPrint;
    private List<String> queryResultArray;

    String label[] = {"Zero", "One", "Two", "Three", "Four", "Five", "Six",
            "Seven", "Eight", "Nine", "Ten", "Eleven"};


    public void runxi() {

        frame = new JFrame("SearchInterface");

        frame.setContentPane(Panel1);
        frame.setLayout(new GridLayout());
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        String[] selections = {"green", "red", "orange", "dark blue"};
        this.searchQueryResult = new JList(selections);
        searchQueryResult.setSelectedIndex(1);
        System.out.println(searchQueryResult.getSelectedValue());
        frame.add(new JScrollPane(searchQueryResult));
        frame.pack();
        frame.setVisible(true);


       /* DefaultListModel<String> model = new DefaultListModel<String>();
        model.addElement("one");
        model.addElement("two");
        model.addElement("three");


        searchQueryResult = new JList<String>(model);


//        searchQueryResult = new JList(queryResultArray);
        searchQueryResult.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        searchQueryResult.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        searchQueryResult.setVisibleRowCount(-1);
        searchQueryResult.setVisible(true);
        JScrollPane listScroller = new JScrollPane();
        listScroller.setViewportView(searchQueryResult);
        listScroller.setPreferredSize(new Dimension(250, 80));
        listScroller.setVisible(true);*/


        searchQueryEnter.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                searchQuery = searchQueryText.getText();
                System.out.println(searchQuery);
                getPrint.getPrint(searchQuery);
                //               queryResultArray = getPrint.getPrint(searchQuery);

            }
        });
        searchQueryText.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                searchQuery = searchQueryText.getText();
                System.out.println(searchQuery);
                getPrint.getPrint(searchQuery);


            }
        });

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        Panel1 = new JPanel();
        Panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        searchQueryText = new JTextField();
        Panel1.add(searchQueryText, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        searchQueryEnter = new JButton();
        searchQueryEnter.setText("Search");
        Panel1.add(searchQueryEnter, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        searchQueryResult = new JList();
        searchQueryResult.setBackground(new Color(-12516083));
        searchQueryResult.setDragEnabled(true);
        Panel1.add(searchQueryResult, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return Panel1;
    }
}

